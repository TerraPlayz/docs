{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"How to Register","text":"<p>You can read more about the domains JSON file structure here.</p>"},{"location":"#guides","title":"Guides","text":"<ul> <li>GitHub Pages</li> <li>Hashnode Blogs</li> <li>Cloudflare Pages</li> <li>Discord Domain Verification</li> <li>Delete Your Domain</li> <li>Edit Your Domain</li> <li>Replit</li> <li>Railway</li> <li>Other Services</li> <li>Dashboard</li> </ul>"},{"location":"#vercel-and-netlify","title":"Vercel and Netlify","text":"<p>You will encounter an SSL certificate issue when using Vercel and Netlify. Neither service will work with our domains. It is recommended to use GitHub Pages, Railway or Cloudflare Pages instead.</p>"},{"location":"cloudflare_pages/","title":"Setting up Cloudflare pages with your is-a.dev subdomain","text":""},{"location":"cloudflare_pages/#creating-a-pagesdev-site","title":"Creating a pages.dev site","text":"<p>Follow their guide on how to set it up.</p>"},{"location":"cloudflare_pages/#point-your-pagesdev-site-to-your-is-adev-subdomain","title":"Point your pages.dev site to your is-a.dev subdomain","text":"<p>Follow their guide on how to do it. Only follow the \"Add a custom domain\" section and then follow the rest of the steps here.</p>"},{"location":"cloudflare_pages/#creating-the-domain-file","title":"Creating the domain file","text":"<p>Create a JSON file inside <code>domains</code> directory (<code>domains/&lt;subdomain&gt;.json</code>) with the following content:</p> <pre><code>{\n\"owner\": {\n\"username\": \"github-username\",\n\"email\": \"email@gmail.com\"\n},\n\"record\": {\n\"CNAME\": \"sitename.pages.dev\"\n}\n} </code></pre>"},{"location":"cloudflare_pages/#configuring","title":"Configuring","text":"<ul> <li>After your pull request has been merged with the main repository you should be able to visit your new is-a.dev domain and it should show you your pages.dev site if it doesn't then you have configured your domain wrong.</li> </ul>"},{"location":"dashboard/","title":"Register your is-a.dev subdomain using the is-a-dev Dashboard","text":""},{"location":"dashboard/#login-to-the-dashboard","title":"Login to the dashboard","text":"<p>First login to the dashboard using your GitHub account.</p>"},{"location":"dashboard/#registering-your-subdomain","title":"Registering your subdomain","text":"<p>On the left hand side, click on the button that says Register with a keyboard icon.</p> <p>Then follow the steps to register your subdomain.</p> <p>It will fork the is-a-dev/register repository, assuming you haven't done that already and it will create a pull request for you.</p> <p>Finally, you'll have to wait for a maintainer to merge it, which should not take too long.</p>"},{"location":"delete_domain/","title":"How to delete your is-a.dev domain","text":""},{"location":"delete_domain/#open-your-fork-of-the-is-a-devregister-repository","title":"Open your fork of the is-a-dev/register repository","text":"<ol> <li>Open your fork, or if you deleted it, fork the repository once again.</li> <li>Find your domain file in the <code>domains/</code> folder (e.g. <code>/domains/myname.json</code>)</li> <li>Press the 3 dots and press the <code>Delete file</code> button.</li> </ol> <ol> <li>Press <code>Commit changes</code>.</li> </ol> <ol> <li>In the popup that appears, press <code>Commit changes</code> once again.</li> </ol> <ol> <li>Click the <code>Contribute</code> button, then press <code>Open pull request</code>.</li> </ol> <ol> <li>Press <code>Create pull request</code> again.</li> </ol> <p>And you're done! After you pull request has been merged, the domain will be deleted.</p>"},{"location":"discord_verification/","title":"Setting up Discord domain connection with your is-a.dev domain","text":""},{"location":"discord_verification/#get-your-verification-string","title":"Get your verification string","text":"<ol> <li>Open your Discord app and press <code>Settings</code>.</li> </ol> <ol> <li>Open the <code>Connections</code> section.</li> </ol> <ol> <li>Press the <code>View more</code> button.</li> </ol> <ol> <li>Click on the domain button (the globe icon).</li> </ol> <ol> <li>In the field that appears type your is-a.dev domain name (e.g. <code>myname.is-a.dev</code>).</li> </ol> <ol> <li>Copy the verification string.</li> </ol>"},{"location":"discord_verification/#create-the-domain-file","title":"Create the domain file","text":"<p>Create a JSON file inside the <code>domains/</code> directory called <code>domains/_discord.yourname.json</code> with the following content:</p> <pre><code>{\n\"owner\": {\n\"username\": \"github-username\",\n\"email\": \"email@address\"\n},\n\"record\": {\n\"TXT\": \"discord-verification-string\"\n}\n} </code></pre>"},{"location":"discord_verification/#configuration","title":"Configuration","text":"<p>After your pull request has been merged, repeat the steps to get the verification string and press the <code>Verify</code> button. If it shows any error such as <code>Unable to verify your domain</code>, try waiting a few minutes (sometimes up to 24 hours) as the DNS change might not have reflected on the DNS server.</p>"},{"location":"domain-structure/","title":"Domains JSON file","text":"<p>To register a subdomain, you need to create a new JSON file in the <code>domains</code> directory through a pull request. For example, to register <code>example.is-a.dev</code>, you would create a file named <code>example.json</code> in the <code>domains</code> directory. The full path would be <code>domains/example.json</code>.</p>"},{"location":"domain-structure/#filename","title":"Filename","text":"<p>Note: You can include <code>.</code> (dots) in your filename to register a sub-subdomain (e.g., <code>blog.example.is-a.dev</code>). However, each segment of your subdomain must meet the following criteria:</p> <p>The filename:</p> <ul> <li>Must be alphanumeric, in lowercase, with dashes as separators. Using underscores as separators is also valid, but it's recommended to use dashes.</li> <li>Must be at least 2 characters.</li> <li>Must have a <code>.json</code> file extension.</li> </ul>"},{"location":"domain-structure/#examples-of-invalid-filenames","title":"Examples of Invalid Filenames","text":"<ul> <li><code>a.json</code> (filename is less than 2 characters)</li> <li><code>A.json</code> (filename contains uppercase letters)</li> <li><code>a..json</code> (filename contains consecutive dots)</li> <li><code>.a.json</code> (filename starts with a dot)</li> <li><code>a .json</code> (filename contains a space)</li> <li><code>a$.json</code> (filename contains a non-alphanumeric character)</li> <li><code>a.json.json</code> (filename contains more than one <code>.json</code> extension)</li> </ul>"},{"location":"domain-structure/#examples-of-valid-filenames","title":"Examples of Valid Filenames","text":"<p>All the filenames below meet all the criteria. The reason in parentheses is just an example of one of the criteria they meet.</p> <ul> <li><code>ab.json</code> (at least 2 characters long)</li> <li><code>example.json</code> (alphanumeric and in lowercase)</li> <li><code>blog.example.json</code> (includes dots to register a sub-subdomain)</li> <li><code>my-blog.json</code> (uses dashes as separators, which is recommended)</li> <li><code>my_blog.json</code> (valid, but it's recommended to use dashes instead of underscores as separators)</li> </ul>"},{"location":"domain-structure/#structure","title":"Structure","text":""},{"location":"domain-structure/#owner-required","title":"owner (required)","text":"<p>You need to specify some information about yourself here. This is so that you can be contacted if required. In the owner object, the fields username and email are required. You can add more information in this object if you want. <pre><code>{\n\"owner\": {\n\"username\": \"&lt;github-username&gt;\",\n\"email\": \"&lt;email@address&gt;\"\n}\n}\n</code></pre></p>"},{"location":"domain-structure/#description","title":"description","text":"<p>Describe your domain name and your usage. This is purely for documentation purpose and is optional.</p>"},{"location":"domain-structure/#repo","title":"repo","text":"<p>This is a link to your website repository or your github account. This is purely for documentation purpose and is optional.</p>"},{"location":"domain-structure/#record-required","title":"record (required)","text":"<p>This section is where you specify the DNS records. The supported types are:</p> <ul> <li><code>CNAME</code></li> <li><code>A</code></li> <li><code>AAAA</code></li> <li><code>URL</code></li> <li><code>MX</code></li> <li><code>TXT</code></li> </ul> <p>Below are some examples for the given record types:</p> <ul> <li>CNAME record: This must be a hostname (<code>something.tld</code>). It cannot be used in conjunction with any other record types. This is typically used to map your domain to a specific server. <pre><code>{\n\"record\": {\n\"CNAME\": \"&lt;github-username&gt;.github.io\"\n}\n}\n</code></pre></li> <li>A record: This must be a list of IPv4 addresses. These addresses point your domain to a specific server. <pre><code>{\n\"record\": {\n\"A\": [\n\"192.0.2.1\",\n\"198.51.100.1\",\n\"203.0.113.1\"\n]\n}\n}\n</code></pre></li> <li>AAAA record: This must be a list of IPv6 addresses. Like the A record, these addresses point your domain to a specific server. <pre><code>{\n\"record\": {\n\"AAAA\": [\n\"2001:0db8:85a3:0000:0000:8a2e:0370:7334\",\n\"2001:0db8:85a3:0000:0000:8a2e:0370:7335\",\n\"2001:0db8:85a3:0000:0000:8a2e:0370:7336\"\n]\n}\n}\n</code></pre></li> <li>URL record: This redirects your domain to another URL. <pre><code>{\n\"record\": {\n\"URL\": \"https://my-other-website.com\"\n}\n}\n</code></pre></li> <li>MX record: This must be a list of hostnames. These hostnames specify the mail servers that handle emails for your domain. <pre><code>{\n\"record\": {\n\"MX\": [\n\"mx1.improvmx.com\",\n\"mx2.improvmx.com\"\n]\n}\n}\n</code></pre></li> <li>TXT record: This can be either a single string or a list of strings. TXT records are often used for various purposes, such as verifying domain ownership and ensuring email security. <pre><code>{\n\"record\": {\n\"TXT\": \"Hello World!\"\n}\n}\n</code></pre> <pre><code>{\n\"record\": {\n\"TXT\": [\"Hello\", \"World!\"]\n}\n}\n</code></pre></li> </ul>"},{"location":"edit_domain/","title":"How to edit your is-a.dev domain","text":""},{"location":"edit_domain/#open-your-fork-of-the-is-a-devregister-repository","title":"Open your fork of the is-a-dev/register repository","text":"<ol> <li>Open your fork, or if you deleted it, fork the repository once again.</li> <li>Find your domain file in the <code>domains/</code> folder (e.g. <code>/domains/myname.json</code>)</li> <li>Press the <code>Edit this file</code> button (a pencil icon).</li> </ol> <ol> <li>Apply your changes in the text field and then press the <code>Commit changes</code> button.</li> </ol> <ol> <li>In the pop-up that appears, press the button <code>Commit changes</code>.</li> </ol> <ol> <li>Press on the <code>register</code> text to go back to the homepage of the repository.</li> </ol> <ol> <li>Press the <code>Contribute</code> button and then press on the <code>Open pull request</code> button.</li> </ol> <ol> <li>Press the <code>Create pull request</code> button.</li> </ol> <ol> <li>Complete the pull request template in the description field, add a title to the pull request, then press <code>Create pull request</code>.</li> </ol> <p>And you're done! After you pull request has been merged, the domain should be updated with-in 24 hours.</p>"},{"location":"github_pages/","title":"Setting up GitHub pages with is-a.dev subdomain","text":""},{"location":"github_pages/#creating-a-github-pages-repository","title":"Creating a GitHub pages repository","text":"<p>You can create a GitHub pages website by creating a repository with the name <code>&lt;github-username&gt;.github.io</code>. For more information about GitHub pages, please read through their guide.</p>"},{"location":"github_pages/#creating-the-domain-file","title":"Creating the domain file","text":"<p>Create a JSON file inside <code>domains</code> directory (<code>domains/&lt;subdomain&gt;.json</code>) with the following content <pre><code>{\n\"description\": \"Describe the use of this subdomain\",\n\"repo\": \"https://github.com/&lt;github-username&gt;/&lt;github-username&gt;.github.io\",\n\"owner\": {\n\"username\": \"&lt;github-username&gt;\",\n\"email\": \"email@address\",\n\"twitter\": \"&lt;twitter-username&gt;\"\n},\n\"record\": {\n\"CNAME\": \"&lt;username&gt;.github.io\"\n}\n} </code></pre></p>"},{"location":"github_pages/#configuring","title":"Configuring","text":"<ul> <li>After the pull request is merged, you will see a 404 error on <code>&lt;your-subdomain&gt;.is-a.dev</code>. To fix this, go to your GitHub pages repository's Settings &gt; GitHub pages &gt; Custom domain and add <code>&lt;your-subdomain&gt;.is-a.dev</code> in the given field. Only do this after your pull request is merged.</li> <li>Check the Enforce HTTPS checkbox below the custom domain input.</li> </ul>"},{"location":"github_pages/#using-is-adev-for-all-github-pages-sites-in-your-account","title":"Using is-a.dev for all GitHub Pages sites in your account","text":"<p>It is possible to have a unique subdomain on your is-a.dev domain for each repository which has Pages enabled.</p> <p>In order to utilise this, you must ensure the following conditions are met: 1) The website which hosts the \"root\" (<code>&lt;subdomain&gt;.is-a.dev</code>) must be named <code>&lt;username&gt;.github.io</code> 2) That repo must have <code>&lt;subdomain&gt;.is-a.dev</code> as the custom domain within the Pages settings. 3) Every other repo must not have a custom domain set in the Pages settings. 4) Links to these hosted repos must end with <code>/</code> (e.g <code>https://&lt;subdomain&gt;.is-a.dev/&lt;project&gt;/</code>)</p>"},{"location":"hashnode/","title":"Hashnode Blog","text":"<p>When you create your hashnode blog, hashnode provides a free <code>hashnode.dev</code> subdomain for you. However, you can set up your own <code>is-a.dev</code> subdomain.</p> <p>In this guide, you will learn how to accomplish this.</p> <ol> <li> <p>Log in to your Hashnode account.</p> </li> <li> <p>Click on your avatar at the bottom-left corner of the page on desktop or top-right corner on mobile.</p> </li> </ol> <p></p> <ol> <li>Click on the Blog Dashboard option from the popup modal to access your blog's dashboard.</li> </ol> <p></p> <ol> <li>Navigate to the Domain tab and enter your domain without the www or https:// prefix in the text field provided. Then click on the Update button to proceed.</li> </ol> <p></p> <ol> <li>Go to your fork of the <code>is-a-dev/register</code> repository, edit your subdomain's JSON file, make sure you remove any old records, then add this: <pre><code>\"CNAME\": \"hashnode.network\"\n</code></pre></li> </ol> <p>Once done, your hashnode blog is setup to use your subdomain, all you have to do is wait sometime for the DNS to propogate. These changes could take from 1 hour to around 48 hours, so please be patient, It'll most likely be ready within a hour. Enjoy your hashnode Blog, With Your Sweet <code>.is-a.dev</code> Subdomain! If your need more help: please read this support article on hashnode support: https://support.hashnode.com/docs/mapping-domain/, this should help you more, if you need more help related to Hashnode, then please visit the Hashnode Support Center. Remeber, is-a.dev has no links with hashnode, so please do not create issues on our github, saying that your hashnode blog is having issues, we simply will not respond to them.</p>"},{"location":"other/","title":"Setting up other services with is-a.dev","text":""},{"location":"other/#setting-up-records","title":"Setting up records","text":"<p>Read the domain file structure and setup the records accordingly.</p>"},{"location":"other/#configuring-your-server","title":"Configuring your server","text":"<p>After the pull request is merged, configure your server (apache, nginx, etc.) to work with <code>&lt;subdomain&gt;.is-a.dev</code>. If you are unsure how to configure your server, you can create an issue for support.</p> <p>You should also, include <code>&lt;subdomain&gt;.is-a.dev</code> in your ssl certificate to get rid of certificate errors.</p>"},{"location":"railway/","title":"Setting up is-a.dev with Railway","text":""},{"location":"railway/#getting-the-cname-record","title":"Getting the CNAME Record","text":"<ol> <li>Navigate to the dashboard</li> <li>Navigate to the project.</li> <li>Navigate to the service.</li> <li>Switch to the Settings tab.</li> <li>Click on + Custom Domain button.</li> <li>Enter the <code>is-a.dev</code> subdomain you want to use.</li> <li>Copy the Value field.</li> <li>Go to the register site.</li> <li>Choose CNAME record type from the dropdown menu.</li> <li>Choose your desired subdomain.</li> <li>Enter the value from clipboard in the Record Value field.</li> <li>Click on the Submit Query button.</li> <li>Wait for your pull request to be merged and the DNS records to update.</li> </ol> <p>If the PR has been merged, the DNS records will be updated in a few minutes. If the PR has been merged but the DNS records haven't updated and you have waited 48 hours, open a GitHub issue or a help thread in the is-a.dev discord server.</p>"},{"location":"replit/","title":"Setting up Replit with your is-a.dev subdomain","text":""},{"location":"replit/#creating-a-project","title":"Creating a project","text":"<p>Follow their guide on how to set it up.</p>"},{"location":"replit/#point-your-replit-to-your-is-adev-subdomain","title":"Point your Replit to your is-a.dev subdomain","text":"<p>Follow their guide on how to do it.</p> <p>Only follow the \"Connecting your domain to your repl\" section and then follow the rest of the steps here.</p>"},{"location":"replit/#creating-the-domain-file","title":"Creating the domain file","text":"<p>Create a JSON file inside <code>domains</code> directory (<code>domains/&lt;subdomain&gt;.json</code>) with the following content:</p> <p>Please do not add any TXT records even if Replit tells you to do so.</p> <pre><code>{\n\"owner\": {\n\"username\": \"&lt;github-username&gt;\",\n\"email\": \"email@address\",\n\"twitter\": \"&lt;twitter-username&gt;\"\n},\n\"record\": {\n\"CNAME\": \"&lt;siteid&gt;.id.repl.co\"\n}\n} </code></pre>"},{"location":"replit/#configuring","title":"Configuring","text":"<ul> <li>After your pull request has been merged with the main repository you should be able to visit your new is-a.dev domain and it should show you your replit site if it doesn't then you have configured your domain wrong.</li> </ul>"}]}